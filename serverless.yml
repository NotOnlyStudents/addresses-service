service: addresses-service

frameworkVersion: "2"

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs12.x
  stage: ${opt:stage, "dev"}
  lambdaHashingVersion: 20201221
  environment:
    DYNAMODB_CONFIG_FILE_PATH: configs/${self:provider.stage}-dynamo.yml
    ADDRESS_TABLE_NAME: ${self:provider.stage}-addresses

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-dynamodb-seed
  - serverless-offline

functions:
  addAddress:
    handler: src/endpoints/addAddress.default
    events:
      - http:
          path: addresses
          method: post
          cors: true
  getAddress:
    handler: src/endpoints/getAddress.default
    events:
      - http:
          path: addresses/{ID}
          method: get
          cors: true
  updateAddress:
    handler: src/endpoints/updateAddress.default
    events:
      - http:
          path: addresses/{ID}
          method: patch
          cors: true        
  deleteAddress:
    handler: src/endpoints/deleteAddress.default
    events:
      - http:
          path: addresses/{ID}
          method: delete
          cors: true        


resources:
  Resources:
    AddressesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ADDRESS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
         
custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
      convertEmptyValues: true
    migration:
      dir: ./offline
